// api/generate.js
const express = require('express');
const Replicate = require('replicate');

const app = express();

// –ü–∞—Ä—Å–∏–º JSON
app.use(express.json());

// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –æ—Ç Railway
const PORT = process.env.PORT || 3000;

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const REPLICATE_API_TOKEN = process.env.REPLICATE_API_TOKEN;

if (!REPLICATE_API_TOKEN) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ –∑–∞–¥–∞–Ω REPLICATE_API_TOKEN');
  process.exit(1);
}

// –°–æ–∑–¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç Replicate
const replicate = new Replicate({ auth: REPLICATE_API_TOKEN });

// –ì–ª–∞–≤–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
app.post('/generate', async (req, res) => {
  const { prompt = "a beautiful landscape", width = 768, height = 768 } = req.body;

  if (!prompt || typeof prompt !== 'string') {
    return res.status(400).json({ error: '–ü–æ–ª–µ "prompt" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π' });
  }

  try {
    console.log('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è:', { prompt, width, height });

    const output = await replicate.run(
      "stability-ai/sdxl:da72866234888c00e2048809c4e65877e85ba5f3a49f1a5529b38758430d2823",
      {
        input: {
          prompt: prompt.trim(),
          width: parseInt(width),
          height: parseInt(height),
          num_inference_steps: 30,
          guidance_scale: 7.5,
        },
      }
    );

    const imageUrl = Array.isArray(output) ? output[0] : output;

    if (!imageUrl) {
      throw new Error('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ');
    }

    res.json({ url: imageUrl });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', err);
    res.status(500).json({
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
      details: err.message
    });
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
app.get('/', (req, res) => {
  res.json({
    status: '–ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!',
    message: '–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ POST –∑–∞–ø—Ä–æ—Å –Ω–∞ /generate',
    docs: 'https://github.com/MIgor369/ai-image-proxy'
  });
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üîó Replicate model: stability-ai/sdxl`);
});

// –ù–µ –Ω—É–∂–Ω–æ –¥–ª—è Railway
// module.exports = app;
